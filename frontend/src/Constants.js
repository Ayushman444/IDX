export const LANGUAGE_VERSIONS = {
  Assembly: "NASM 2.14.02",
  Bash: "5.0.0",
  Basic: "FBC 1.07.1",
  C: "7.0.1",
  Cpp: "7.0.1",
  C_GCC_7: "7.4.0",
  Cpp_GCC_7: "7.4.0",
  C_GCC_8: "8.3.0",
  Cpp_GCC_8: "8.3.0",
  C_GCC_9: "9.2.0",
  Cpp_GCC_9: "9.2.0",
  Clojure: "1.10.1",
  CSharp: "6.6.0.161",
  COBOL: "2.2",
  CommonLisp: "2.0.0",
  Dart: "2.19.2",
  D: "2.089.1",
  Elixir: "1.9.4",
  Erlang: "22.2",
  Executable: "",
  FSharp: "3.1.202",
  Fortran: "9.2.0",
  Go: "1.18.5",
  Groovy: "3.0.3",
  Haskell: "8.8.1",
  Java: "17.0.6",
  JavaScript: "18.15.0",
  Kotlin: "1.3.70",
  Lua: "5.3.5",
  MultiFileProgram: "",
  ObjectiveC: "7.0.1",
  OCaml: "4.09.0",
  Octave: "5.1.0",
  Pascal: "3.0.4",
  Perl: "5.28.1",
  PHP: "7.4.1",
  PlainText: "",
  Prolog: "1.4.5",
  Python: "3.11.2",
  R: "4.0.0",
  Ruby: "2.7.0",
  Rust: "1.40.0",
  Scala: "2.13.2",
  SQL: "3.27.2",
  Swift: "5.2.3",
  TypeScript: "5.0.3",
  VisualBasic: "0.0.0.5943"
};

export const CODE_SNIPPETS = {
  Assembly: `section .data\nhello db 'Hello, world!',0\n\nsection .text\n    global _start\n\n_start:\n    ; write hello to stdout\n    mov eax,4\n    mov ebx,1\n    mov ecx,hello\n    mov edx,13\n    int 0x80\n\n    ; exit\n    mov eax,1\n    xor ebx,ebx\n    int 0x80`,
  Bash: `echo "Hello, world!"`,
  Basic: `PRINT "Hello, world!"`,
  C: `#include <stdio.h>\n\nint main() {\n    printf("Hello, world!\\n");\n    return 0;\n}`,
  Cpp: `#include <iostream>\n\nint main() {\n    std::cout << "Hello, world!" << std::endl;\n    return 0;\n}`,
  C_GCC_7: `#include <stdio.h>\n\nint main() {\n    printf("Hello, world!\\n");\n    return 0;\n}`,
  Cpp_GCC_7: `#include <iostream>\n\nint main() {\n    std::cout << "Hello, world!" << std::endl;\n    return 0;\n}`,
  C_GCC_8: `#include <stdio.h>\n\nint main() {\n    printf("Hello, world!\\n");\n    return 0;\n}`,
  Cpp_GCC_8: `#include <iostream>\n\nint main() {\n    std::cout << "Hello, world!" << std::endl;\n    return 0;\n}`,
  C_GCC_9: `#include <stdio.h>\n\nint main() {\n    printf("Hello, world!\\n");\n    return 0;\n}`,
  Cpp_GCC_9: `#include <iostream>\n\nint main() {\n    std::cout << "Hello, world!" << std::endl;\n    return 0;\n}`,
  Clojure: `(println "Hello, world!")`,
  CSharp: `using System;\n\npublic class Program {\n    public static void Main() {\n        Console.WriteLine("Hello, world!");\n    }\n}`,
  COBOL: `       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HELLO-WORLD.\n       PROCEDURE DIVISION.\n           DISPLAY 'Hello, world!'.\n           STOP RUN.`,
  CommonLisp: `(write-line "Hello, world!")`,
  Dart: `void main() {\n    print('Hello, world!');\n}`,
  D: `import std.stdio;\n\nvoid main() {\n    writeln("Hello, world!");\n}`,
  Elixir: `IO.puts "Hello, world!"`,
  Erlang: `-module(hello).\n-export([start/0]).\n\nstart() ->\n    io:fwrite("Hello, world!\\n").`,
  FSharp: `printfn "Hello, world!"`,
  Fortran: `program hello\n    print *, "Hello, world!"\nend program hello`,
  Go: `package main\n\nimport "fmt"\n\nfunc main() {\n    fmt.Println("Hello, world!")\n}`,
  Groovy: `println 'Hello, world!'`,
  Haskell: `main = putStrLn "Hello, world!"`,
  Java: `public class Main {\n    public static void main(String[] args) {\n        System.out.println("Hello, world!");\n    }\n}`,
  JavaScript: `console.log('Hello, world!');`,
  Kotlin: `fun main() {\n    println("Hello, world!")\n}`,
  Lua: `print('Hello, world!')`,
  ObjectiveC: `#import <Foundation/Foundation.h>\n\nint main() {\n    NSLog(@"Hello, world!");\n    return 0;\n}`,
  OCaml: `print_endline "Hello, world!";;`,
  Octave: `disp('Hello, world!')`,
  Pascal: `program HelloWorld;\nbegin\n  writeln('Hello, world!');\nend.`,
  Perl: `print "Hello, world!\\n";`,
  PHP: `<?php\n\necho 'Hello, world!';\n`,
  Prolog: `:- initialization(main).\nmain :- write('Hello, world!'), nl.`,
  Python: `print('Hello, world!')`,
  R: `print('Hello, world!')`,
  Ruby: `puts 'Hello, world!'`,
  Rust: `fn main() {\n    println!("Hello, world!");\n}`,
  Scala: `object Main extends App {\n    println("Hello, world!")\n}`,
  SQL: `SELECT 'Hello, world!';`,
  Swift: `import Swift\nprint("Hello, world!")`,
  TypeScript: `console.log('Hello, world!');`,
  VisualBasic: `Module Module1\n    Sub Main()\n        Console.WriteLine("Hello, world!")\n    End Sub\nEnd Module`
};

export const LanguageIds = {
  Assembly: 45,
  Bash: 46,
  Basic: 47,
  C: 75,
  Cpp: 76,
  C_GCC_7: 48,
  Cpp_GCC_7: 52,
  C_GCC_8: 49,
  Cpp_GCC_8: 53,
  C_GCC_9: 50,
  Cpp_GCC_9: 54,
  Clojure: 86,
  CSharp: 51,
  COBOL: 77,
  CommonLisp: 55,
  Dart: 90,
  D: 56,
  Elixir: 57,
  Erlang: 58,
  Executable: 44,
  FSharp: 87,
  Fortran: 59,
  Go: 60,
  Groovy: 88,
  Haskell: 61,
  Java: 91,
  JavaScript: 93,
  Kotlin: 78,
  Lua: 64,
  MultiFileProgram: 89,
  ObjectiveC: 79,
  OCaml: 65,
  Octave: 66,
  Pascal: 67,
  Perl: 85,
  PHP: 68,
  PlainText: 43,
  Prolog: 69,
  Python: 71,
  R: 80,
  Ruby: 72,
  Rust: 73,
  Scala: 81,
  SQL: 82,
  Swift: 83,
  TypeScript: 94,
  VisualBasic: 84
};